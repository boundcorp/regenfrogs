# Generated by Django 4.2.11 on 2024-03-23 21:42

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import regenfrogs.utils.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("frogs", "0010_remove_frogimage_vectorized_svg"),
    ]

    operations = [
        migrations.CreateModel(
            name="FrogLog",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=regenfrogs.utils.models._generate_medium_id,
                        editable=False,
                        max_length=32,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                ("created_by", models.TextField(blank=True, null=True)),
                ("text", models.TextField(blank=True, null=True)),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        choices=[("Health", "Health"), ("Sanity", "Sanity"), ("Hunger", "Hunger")],
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("-updated_at", "-created_at"),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FrogProfile",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=regenfrogs.utils.models._generate_medium_id,
                        editable=False,
                        max_length=32,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                ("alive", models.BooleanField(default=True)),
                (
                    "health",
                    models.IntegerField(
                        default=100,
                        validators=[
                            django.core.validators.MaxValueValidator(100),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "sanity",
                    models.IntegerField(
                        default=100,
                        validators=[
                            django.core.validators.MaxValueValidator(100),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "hunger",
                    models.IntegerField(
                        default=100,
                        validators=[
                            django.core.validators.MaxValueValidator(100),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("Happy", "Happy"), ("Content", "Content"), ("Sad", "Sad")], default="HAPPY"
                    ),
                ),
                ("species", models.TextField(blank=True, null=True)),
                ("hands", models.TextField(blank=True, null=True)),
                ("clothes", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.OneToOneField(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="frogs.frogimage"
                    ),
                ),
                ("owner", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                "ordering": ("-updated_at", "-created_at"),
                "abstract": False,
            },
        ),
        migrations.DeleteModel(
            name="Frog",
        ),
        migrations.AddField(
            model_name="froglog",
            name="frog",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="logs", to="frogs.frogprofile"
            ),
        ),
    ]
